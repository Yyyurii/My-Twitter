{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.jsx","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.jsx","components/PostStatusFilter/index.js","components/PostStatusFilter/PostStatusFilter.jsx","components/PostListItem/index.js","components/PostListItem/PostListItem.jsx","components/PostList/index.js","components/PostList/PostList.jsx","components/PostAddForm/index.js","components/PostAddForm/PostAddForm.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["AppHeadre","liked","allPosts","className","SearchPanel","state","term","onUpdateSearch","event","target","value","setState","props","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","key","onClick","onFilterSelect","PostListItem","onDeleted","onToggleLike","onToggleImportant","classNames","important","like","PostList","posts","element","item","obj","isEmpty","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","addItem","App","data","index","findIndex","elem","old","newItem","slice","maxId","deleteItem","body","searchPosts","items","length","indexOf","filterPost","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"wYACeA,G,YCEG,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACzB,OACE,yBAAKC,UAAU,qBACb,uCACA,4BAAKD,EAAL,kBAA8BD,MCNrBG,G,kNCIbC,MAAQ,CACNC,KAAM,I,EAGRC,eAAiB,SAACC,GAChB,IAAMF,EAAOE,EAAMC,OAAOC,MAC1B,EAAKC,SAAS,CAACL,SACf,EAAKM,MAAML,eAAeD,I,uDAI1B,OACE,2BACEH,UAAU,4BACVU,KAAK,OACLC,YAAY,oBACZC,SAAUC,KAAKT,qB,GAlBkBU,cCF1BC,G,kNCIbC,QAAU,CACR,CAAEC,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,OAAQC,MAAO,S,uDAEf,IAAD,OAEDF,EAAUH,KAAKG,QAAQG,KAAI,YAAsB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAElCE,EADS,EAAKX,MAAMY,SAAWJ,EACd,WAAa,wBACpC,OACE,4BACEK,IAAKL,EACLP,KAAK,SACLV,UAAS,cAASoB,GAClBG,QAAS,kBAAM,EAAKd,MAAMe,eAAeP,KACtCC,MAIT,OACE,yBAAKlB,UAAU,aACXgB,O,GAvBoCF,c,OCF/BW,G,mLCIH,IAAD,EAEsEZ,KAAKJ,MAA3ES,EAFA,EAEAA,MAAOQ,EAFP,EAEOA,UAAWC,EAFlB,EAEkBA,aAAcC,EAFhC,EAEgCA,kBAEnCC,EAAa,+CAUjB,OAdO,EAEmDC,YAKxDD,GAAc,cAPT,EAE8DE,OASnEF,GAAc,SAId,yBAAK7B,UAAW6B,GACd,0BAAM7B,UAAU,sBACVuB,QAASI,GACZT,GAEH,yBAAKlB,UAAU,oDACb,4BAAQU,KAAK,SAASV,UAAU,mBAC9B,uBAAGA,UAAU,aACVuB,QAASK,KAEd,4BAAQlB,KAAK,SACLV,UAAU,mBACVuB,QAASG,GACf,uBAAG1B,UAAU,mBAEf,uBAAGA,UAAU,sB,GAhCmBc,cCF3BkB,ECGE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOP,EAAiD,EAAjDA,UAAWE,EAAsC,EAAtCA,kBAAmBD,EAAmB,EAAnBA,aAGjDO,EAAUD,EAAMd,KAAI,SAACgB,GAEzB,GAAoB,kBAATA,GAiBb,SAAiBC,GACf,IAAI,IAAId,KAAOc,EAEP,OAAO,EAEX,OAAO,EAtBqBC,CAAQF,GAAO,CAAC,IACvCG,EAAoBH,EAApBG,GAAOC,EAD+B,YAClBJ,EADkB,QAE7C,OACE,wBAAIb,IAAKgB,EAAItC,UAAU,mBACrB,kBAAC,EAAD,iBAGMuC,EAHN,CAIEb,UAAW,kBAAMA,EAAUY,IAC3BV,kBAAmB,kBAAMA,EAAkBU,IAC3CX,aAAc,kBAAMA,EAAaW,YAe3C,OACE,wBAAItC,UAAU,uBACXkC,ICnCQM,G,kNCIbtC,MAAQ,CACNuC,KAAM,I,EAGRC,cAAgB,SAACrC,GACf,EAAKG,SAAS,CACZiC,KAAMpC,EAAMC,OAAOC,S,EAIvBoC,SAAW,SAACtC,GACVA,EAAMuC,iBACN,EAAKnC,MAAMoC,QAAQ,EAAK3C,MAAMuC,MAC9B,EAAKjC,SAAS,CACZiC,KAAM,M,uDAMR,OACE,0BAAMzC,UAAU,sBACV2C,SAAU9B,KAAK8B,UACnB,2BACEjC,KAAK,OACLC,YAAY,6BACZX,UAAU,8BACVY,SAAUC,KAAK6B,cACfnC,MAAOM,KAAKX,MAAMuC,OAClB,4BACE/B,KAAK,SACLV,UAAU,6BAFZ,Y,GA/B+Bc,cCF1BgC,E,4MCSb5C,MAAQ,CACN6C,KAAM,CACJ,CAAE7B,MAAO,YAAaY,WAAW,EAAMC,MAAM,EAAOO,GAAI,OACxD,CAAEpB,MAAO,YAAaY,WAAW,EAAOC,MAAM,EAAOO,GAAI,OACzD,CAAEpB,MAAO,aAAcY,WAAW,EAAOC,MAAM,EAAOO,GAAI,QAE5DnC,KAAM,GACNkB,OAAQ,O,EAGVO,kBAAoB,SAACU,GACnB,EAAK9B,UAAS,YAAe,IAAZuC,EAAW,EAAXA,KACTC,EAAQD,EAAKE,WAAU,SAAAC,GAAI,OAAIA,EAAKZ,KAAOA,KAC3Ca,EAAMJ,EAAKC,GACXI,EAAO,2BAAQD,GAAR,IAAarB,WAAYqB,EAAIrB,YAE1C,MAAO,CACLiB,KAFU,sBAAOA,EAAKM,MAAM,EAAGL,IAArB,CAA6BI,GAA7B,YAAyCL,EAAKM,MAAML,EAAQ,U,EAO5ErB,aAAe,SAACW,GACd,EAAK9B,UAAS,YAAe,IAAZuC,EAAW,EAAXA,KACTC,EAAQD,EAAKE,WAAU,SAAAC,GAAI,OAAIA,EAAKZ,KAAOA,KAC3Ca,EAAMJ,EAAKC,GACXI,EAAO,2BAAQD,GAAR,IAAapB,MAAOoB,EAAIpB,OAErC,MAAO,CACLgB,KAFU,sBAAOA,EAAKM,MAAM,EAAGL,IAArB,CAA6BI,GAA7B,YAAyCL,EAAKM,MAAML,EAAQ,U,EAO5EM,MAAQ,E,EAERC,WAAa,SAACjB,GACZ,EAAK9B,UAAS,YAAe,IAAZuC,EAAW,EAAXA,KACTC,EAAQD,EAAKE,WAAU,SAAAC,GAAI,OAAIA,EAAKZ,KAAOA,KAEjD,MAAO,CACLS,KAFU,sBAAOA,EAAKM,MAAM,EAAGL,IAArB,YAAgCD,EAAKM,MAAML,EAAQ,U,EAOnEH,QAAU,SAACW,GACT,IAAMJ,EAAU,CACdlC,MAAOsC,EACP1B,WAAW,EACXQ,GAAI,EAAKgB,SAEX,EAAK9C,UAAS,YAAe,IAAZuC,EAAW,EAAXA,KAEf,MAAO,CACLA,KAFU,sBAAOA,GAAP,CAAaK,S,EAO7BK,YAAc,SAACC,EAAOvD,GACpB,OAAoB,IAAhBA,EAAKwD,OACAD,EAGFA,EAAMrC,QAAO,SAACc,GACnB,OAAOA,EAAKjB,MAAM0C,QAAQzD,IAAS,M,EAIvCC,eAAiB,SAACD,GAChB,EAAKK,SAAS,CAACL,U,EAGjB0D,WAAa,SAACH,EAAOrC,GACnB,MAAc,SAAXA,EACMqC,EAAMrC,QAAO,SAAAc,GAAI,OAAIA,EAAKJ,QAE1B2B,G,EAIXlC,eAAiB,SAACH,GAChB,EAAKb,SAAS,CAACa,Y,uDAGP,IAAD,EAEwBR,KAAKX,MAA5B6C,EAFD,EAECA,KAAM5C,EAFP,EAEOA,KAAMkB,EAFb,EAEaA,OACdvB,EAAQiD,EAAK1B,QAAO,SAAAc,GAAI,OAAIA,EAAKJ,QAAM4B,OACvC5D,EAAWgD,EAAKY,OAEhBG,EAAejD,KAAKgD,WAAWhD,KAAK4C,YAAYV,EAAM5C,GAAOkB,GACnE,OACE,yBAAKrB,UAAU,OACb,kBAAC,EAAD,CACEF,MAAOA,EACPC,SAAUA,IACZ,yBAAKC,UAAU,uBACb,kBAAC,EAAD,CAAaI,eAAgBS,KAAKT,iBAClC,kBAAC,EAAD,CACEiB,OAAQA,EACRG,eAAgBX,KAAKW,kBAEzB,kBAAC,EAAD,CAAUS,MAAO6B,EACfpC,UAAWb,KAAK0C,WAChB3B,kBAAmBf,KAAKe,kBACxBD,aAAcd,KAAKc,eACrB,kBAAC,EAAD,CAAakB,QAAShC,KAAKgC,e,GA9GF/B,aCHjCiD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2b50f31e.chunk.js","sourcesContent":["import AppHeadre from './AppHeader';\r\nexport default AppHeadre;","import React from 'react';\r\nimport './AppHeader.css';\r\n\r\nconst AppHeadre = ({liked, allPosts}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Yyyurii</h1>\r\n      <h2>{allPosts} entries, like {liked}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeadre;","import SearchPanel from './SearchPanel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './SearchPanel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  }\r\n\r\n  onUpdateSearch = (event) => {\r\n    const term = event.target.value;\r\n    this.setState({term});\r\n    this.props.onUpdateSearch(term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Search by records\" \r\n        onChange={this.onUpdateSearch} />\r\n    )\r\n  }\r\n}\r\n","import PostStatusFilter from './PostStatusFilter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\nimport './PostStatusFilter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'like', label: 'Like' }\r\n  ]\r\n  render() {\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const active = this.props.filter === name;\r\n      const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n      return (\r\n        <button \r\n          key={name} \r\n          type=\"button\" \r\n          className={`btn ${clazz}`}\r\n          onClick={() => this.props.onFilterSelect(name)}>\r\n            {label}</button>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        { buttons }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import PostListItem from './PostListItem';\r\nexport default PostListItem;","import React, { Component } from 'react';\r\nimport './PostListItem.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n  render() {\r\n\r\n    const {label, onDeleted, onToggleLike, onToggleImportant, important, like} = this.props;\r\n\r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    if (like) {\r\n      classNames += ' like';\r\n    }\r\n\r\n    return (\r\n      <div className={classNames}>\r\n        <span className=\"app-list-item-label\"\r\n              onClick={onToggleLike}>\r\n          {label}\r\n        </span>\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <button type=\"button\" className=\"btn-star btn-sm\">\r\n            <i className=\"fa fa-star\"\r\n               onClick={onToggleImportant}></i>\r\n          </button>\r\n          <button type=\"button\" \r\n                  className=\"btn-trash btn-sm\"\r\n                  onClick={onDeleted} >\r\n            <i className=\"fa fa-trash-o\"></i>\r\n          </button>\r\n          <i className=\"fa fa-heart\"></i>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import PostList from './PostList';\r\nexport default PostList;","import React from 'react';\r\nimport './PostList.css';\r\nimport PostListItem from '../PostListItem';\r\n\r\nconst PostList = ({ posts, onDeleted, onToggleImportant, onToggleLike }) => {\r\n  \r\n  // eslint-disable-next-line\r\n  const element = posts.map((item) => {\r\n\r\n    if (typeof item === 'object' && isEmpty(item)) {\r\n      const {id, ...itemProps} = item;\r\n      return (\r\n        <li key={id} className=\"list-group-item\">\r\n          <PostListItem \r\n            // label={item.label}\r\n            // important={item.important}\r\n            {...itemProps}\r\n            onDeleted={() => onDeleted(id)}\r\n            onToggleImportant={() => onToggleImportant(id)}\r\n            onToggleLike={() => onToggleLike(id)}\r\n            />\r\n        </li>\r\n      )\r\n    }\r\n  })\r\n\r\n  function isEmpty(obj) {\r\n    for(let key in obj)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"app-list list-group\">\r\n      {element}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './PostAddForm';\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\nimport './PostAddForm.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n\r\n  state = {\r\n    text: ''\r\n  }\r\n\r\n  onValueChange = (event) => {\r\n    this.setState({\r\n      text: event.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.addItem(this.state.text)\r\n    this.setState({\r\n      text: ''\r\n    })\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <form className=\"bottom-panel d-flex\" \r\n            onSubmit={this.onSubmit} >\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"what are you thinking now?\"\r\n          className=\"form-control new-post-label\"\r\n          onChange={this.onValueChange}\r\n          value={this.state.text} />\r\n          <button \r\n            type=\"submit\"\r\n            className=\"btn btn-outline-secondary\" >\r\n            Add\r\n          </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import App from './App';\r\nexport default App;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppHeadre from '../AppHeader/';\r\nimport SearchPanel from '../SearchPanel';\r\nimport PostStatusFilter from '../PostStatusFilter';\r\nimport PostList from '../PostList/';\r\nimport PostAddForm from '../PostAddForm';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    data: [\r\n      { label: \"Work hard\", important: true, like: false, id: \"qwe\" },\r\n      { label: \"play hard\", important: false, like: false, id: \"asd\" },\r\n      { label: \"That's all\", important: false, like: false, id: \"zxc\" }\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n      const old = data[index];\r\n      const newItem = { ...old, important: !old.important };\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleLike = (id) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n      const old = data[index];\r\n      const newItem = { ...old, like: !old.like };\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  maxId = 4;\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)]\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  addItem = (body) => {\r\n    const newItem = {\r\n      label: body,\r\n      important: false,\r\n      id: this.maxId++\r\n    }\r\n    this.setState(({ data }) => {\r\n      const newArr = [...data, newItem];\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  searchPosts = (items, term) => {\r\n    if (term.length === 0) {\r\n      return items\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.indexOf(term) > -1\r\n    });\r\n  }\r\n\r\n  onUpdateSearch = (term) => {\r\n    this.setState({term});\r\n  }\r\n\r\n  filterPost = (items, filter) => {\r\n    if(filter === 'like') {\r\n      return items.filter(item => item.like)\r\n    } else {\r\n      return items\r\n    }\r\n  }\r\n\r\n  onFilterSelect = (filter) => {\r\n    this.setState({filter})\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data, term, filter } = this.state;\r\n    const liked = data.filter(item => item.like).length;\r\n    const allPosts = data.length;\r\n\r\n    const visiblePosts = this.filterPost(this.searchPosts(data, term), filter);\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeadre\r\n          liked={liked}\r\n          allPosts={allPosts} />\r\n        <div className=\"search-panel d-flex\">\r\n          <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n          <PostStatusFilter \r\n            filter={filter}\r\n            onFilterSelect={this.onFilterSelect} />\r\n        </div>\r\n        <PostList posts={visiblePosts}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleLike={this.onToggleLike} />\r\n        <PostAddForm addItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}